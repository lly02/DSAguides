@inherits LayoutComponentBase
@layout MainLayout
    
<div class="row g-0 h-100">
    <div id="sidebar" class="@_sidebarShowing col-2 d-flex" tabindex="0" @ref="_sidebar" @onblur="@(() => FocusContent())">
        <ul class="nav nav-pills flex-column flex-grow-1">
            <li class="nav-item">
                <a class="nav-link active" href="/">Array</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/">Something</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/">Something2</a>
            </li>
        </ul>
        <button id="sidebar-toggle" class="@_sidebarShowing btn" @onclick="SidebarToggle">
            <img class="show-sidebar @_showSidebar" src="/images/site/arrow-right-circle.svg" alt="sidebar-toggle" />
            <img class="hide-sidebar @_hideSidebar" src="/images/site/arrow-left-circle.svg" alt="sidebar-toggle" />
        </button>
    </div>

    <div id="content" class="col d-flex">
        @Body
    </div>

</div>

@code {
    private ElementReference _sidebar;
    private string _sidebarShowing = "hide";
    private string _showSidebar = "";
    private string _hideSidebar = "hide";

    public bool SidebarShowing
    {
        get => _sidebarShowing == "hide" ? false : true;
        set
        {
            if (value)
            {
                _sidebarShowing = "";
                _sidebar.FocusAsync();
                _showSidebar = "hide";
                _hideSidebar = "";
            }
            else
            {
                _sidebarShowing = "hide";
                _showSidebar = "";
                _hideSidebar = "hide";
            }
        }
    }

    public void SidebarToggle()
    {
        SidebarShowing = !SidebarShowing;
    }

    public void FocusContent()
    {
        if (SidebarShowing) SidebarShowing = !SidebarShowing;
    }
}
